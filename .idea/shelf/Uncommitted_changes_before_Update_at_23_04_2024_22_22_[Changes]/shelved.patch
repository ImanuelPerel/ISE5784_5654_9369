Index: src/primitives/Vector.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package primitives;\r\n\r\n/**\r\n * Class Vector is the basic class representing a three-dimensional vector of Euclidean geometry in Cartesian\r\n * 3-Dimensional coordinate system.\r\n *\r\n * @author Shneor and Emanuel\r\n */\r\npublic class Vector extends Point {\r\n\r\n    /**\r\n     * construct a vector from a triad\r\n     * @param xyz the triad from which the vector will be constructed\r\n     * @throws IllegalArgumentException if we try to construct the zero vector\r\n     */\r\n    Vector(Double3 xyz) throws IllegalArgumentException {\r\n        super(xyz);\r\n        if (xyz.equals(Double3.ZERO))\r\n            throw new IllegalArgumentException(\"can't create the zero vector\");\r\n    }\r\n\r\n    /**\r\n     * get three double coordinates and construct a three-dimensional vector (x,y,z)\r\n     *\r\n     * @param x the value of the x-axis of the point\r\n     * @param y the value of the y-axis of the point\r\n     * @param z the value of the z-axis of the point\r\n     * @throws IllegalArgumentException if we try to construct the zero vector\r\n     */\r\n    public Vector(double x, double y, double z) throws IllegalArgumentException {\r\n        super(x, y, z);\r\n        if (x == 0 && y == 0 && z == 0)\r\n            throw new IllegalArgumentException(\"can't create the zero vector\");\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param obj the object we are comparing to the calling object\r\n     * @return whether the calling vector is equal to obj\r\n     */\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        if (this == obj) return true;\r\n        return obj instanceof Vector && super.equals(obj);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return (x,y,z)\r\n     */\r\n    @Override\r\n    public String toString() {\r\n        return super.toString();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return the squared length of the vector (x^2+y^2+z^2)\r\n     */\r\n    public double lengthSquared() {\r\n        return this.dotProduct(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return the length of the vector sqrt(x^2+y^2+z^2)\r\n     */\r\n    public double length() {\r\n        return Math.sqrt(lengthSquared());\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param vector the vector that needs to be added to the vector\r\n     * @return the vector-sum of the two vectors (the calling vector and the called vector)\r\n     * @throws IllegalArgumentException if the sum  is of the vector is zero\r\n     */\r\n    public Vector add(Vector vector) throws IllegalArgumentException {\r\n        return new Vector(vector.xyz.add(this.xyz));\r\n    }\r\n\r\n    /**\r\n     * @param mult the scalar\r\n     * @return the scaled vector (by the scalar)\r\n     * @throws IllegalArgumentException if the scalar is zero\r\n     */\r\n    public Vector scale(double mult) throws IllegalArgumentException {\r\n        return new Vector(this.xyz.scale(mult));\r\n    }\r\n\r\n    /**\r\n     * @param vector the vector that will be dot-producted with\r\n     * @return the dot-product of the two vectors x1*s2+y1*y2+z1*z2\r\n     * */\r\n    public double dotProduct(Vector vector) {\r\n        return vector.xyz.d1 * this.xyz.d1 +\r\n                vector.xyz.d2 * this.xyz.d2 +\r\n                vector.xyz.d3 * this.xyz.d3;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param vector the vector that this vector will be cross-producted with\r\n     * @return the cross product of the two vectors (y1*z2-y2*z1,z1*x2-z2*x1,x1*y2-x2*y1)\r\n     * @throws IllegalArgumentException if the two vectors are parallel and the vector is zero\r\n     */\r\n    public Vector crossProduct(Vector vector) throws IllegalArgumentException {\r\n        return new Vector(new Double3(this.xyz.d2 * vector.xyz.d3 - vector.xyz.d2 * this.xyz.d3,\r\n                this.xyz.d3 * vector.xyz.d1 - vector.xyz.d3 * this.xyz.d1,\r\n                this.xyz.d1 * vector.xyz.d2 - vector.xyz.d1 * this.xyz.d2));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return the normalized vector v/|v|\r\n     */\r\n    public Vector normalize() {\r\n        try {\r\n            return new Vector(this.xyz.reduce(this.length()));\r\n        } catch (IllegalArgumentException ex) {\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/primitives/Vector.java b/src/primitives/Vector.java
--- a/src/primitives/Vector.java	(revision efb3663e405cab2cd16fde9028c9ddc799a466df)
+++ b/src/primitives/Vector.java	(date 1713896288835)
@@ -93,9 +93,7 @@
      * @return the dot-product of the two vectors x1*s2+y1*y2+z1*z2
      * */
     public double dotProduct(Vector vector) {
-        return vector.xyz.d1 * this.xyz.d1 +
-                vector.xyz.d2 * this.xyz.d2 +
-                vector.xyz.d3 * this.xyz.d3;
+        return vector.xyz.d1 * this.xyz.d1 + vector.xyz.d2 * this.xyz.d2 + vector.xyz.d3 * this.xyz.d3;
     }
 
     /**
@@ -105,9 +103,7 @@
      * @throws IllegalArgumentException if the two vectors are parallel and the vector is zero
      */
     public Vector crossProduct(Vector vector) throws IllegalArgumentException {
-        return new Vector(new Double3(this.xyz.d2 * vector.xyz.d3 - vector.xyz.d2 * this.xyz.d3,
-                this.xyz.d3 * vector.xyz.d1 - vector.xyz.d3 * this.xyz.d1,
-                this.xyz.d1 * vector.xyz.d2 - vector.xyz.d1 * this.xyz.d2));
+        return new Vector(new Double3(this.xyz.d2 * vector.xyz.d3 - vector.xyz.d2 * this.xyz.d3, this.xyz.d3 * vector.xyz.d1 - vector.xyz.d3 * this.xyz.d1, this.xyz.d1 * vector.xyz.d2 - vector.xyz.d1 * this.xyz.d2));
     }
 
     /**
Index: src/geometries/Tube.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/geometries/Tube.java b/src/geometries/Tube.java
new file mode 100644
--- /dev/null	(date 1713900050008)
+++ b/src/geometries/Tube.java	(date 1713900050008)
@@ -0,0 +1,9 @@
+package geometries;
+
+import primitives.Ray;
+
+public class Tube implements RadialGeometry{
+    protected Ray axis;
+
+
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e5cceaaf-c0c5-48c7-9821-b44857685865\" name=\"Changes\" comment=\"test\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/primitives/Vector.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/primitives/Vector.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;ShneorM&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/ShneorM/ISE5784_5654_9369.git&quot;,\r\n    &quot;accountId&quot;: &quot;8ce4f129-03ec-4ecc-9dc8-9aae1c22b1be&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2fQcTGzCc2kehNSYfNrQbSLV1pb\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/shneor/Desktop/miniP/ISE5784_5654_9369/src/Main.java&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e5cceaaf-c0c5-48c7-9821-b44857685865\" name=\"Changes\" comment=\"\" />\r\n      <created>1713736751765</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1713736751765</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00001\" summary=\"test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713737246859</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1713737246859</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"test\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"test\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision efb3663e405cab2cd16fde9028c9ddc799a466df)
+++ b/.idea/workspace.xml	(date 1713899872178)
@@ -4,7 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e5cceaaf-c0c5-48c7-9821-b44857685865" name="Changes" comment="test">
+    <list default="true" id="e5cceaaf-c0c5-48c7-9821-b44857685865" name="Changes" comment="Done Vector Class in Stage1">
+      <change afterPath="$PROJECT_DIR$/src/geometries/Tube.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/primitives/Vector.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/primitives/Vector.java" afterDir="false" />
     </list>
@@ -71,7 +72,15 @@
       <option name="project" value="LOCAL‎" />
       <updated>1713737246859</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL‎-00002" summary="Done Vector Class in Stage1">
+      <option name="closed" value="true" />
+      <created>1713743829197</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL‎-00002" />
+      <option name="project" value="LOCAL‎" />
+      <updated>1713743829197</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -87,6 +96,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="test" />
-    <option name="LAST_COMMIT_MESSAGE" value="test" />
+    <MESSAGE value="Done Vector Class in Stage1" />
+    <option name="LAST_COMMIT_MESSAGE" value="Done Vector Class in Stage1" />
   </component>
 </project>
\ No newline at end of file
